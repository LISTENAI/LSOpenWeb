(self.webpackChunkls_docs_web=self.webpackChunkls_docs_web||[]).push([[2200],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return s},kt:function(){return m}});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var o=r.createContext({}),u=function(e){var n=r.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},s=function(e){var n=u(e.components);return r.createElement(o.Provider,{value:n},e.children)},_={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},c=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,l=e.originalType,o=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),c=u(t),m=a,d=c["".concat(o,".").concat(m)]||c[m]||_[m]||l;return t?r.createElement(d,i(i({ref:n},s),{},{components:t})):r.createElement(d,i({ref:n},s))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var l=t.length,i=new Array(l);i[0]=c;var p={};for(var o in n)hasOwnProperty.call(n,o)&&(p[o]=n[o]);p.originalType=e,p.mdxType="string"==typeof e?e:a,i[1]=p;for(var u=2;u<l;u++)i[u]=t[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}c.displayName="MDXCreateElement"},54012:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return p},contentTitle:function(){return o},metadata:function(){return u},toc:function(){return s},default:function(){return c}});var r=t(22122),a=t(19756),l=(t(67294),t(3905)),i=["components"],p={},o="\u7ebf\u7a0b\u95f4\u540c\u6b65",u={unversionedId:"chips/600X/application/kernel/synchronization",id:"chips/600X/application/kernel/synchronization",isDocsHomePage:!1,title:"\u7ebf\u7a0b\u95f4\u540c\u6b65",description:"\u6982\u8ff0",source:"@site/docs/chips/600X/application/kernel/synchronization.md",sourceDirName:"chips/600X/application/kernel",slug:"/chips/600X/application/kernel/synchronization",permalink:"/chips/600X/application/kernel/synchronization",version:"current",frontMatter:{},sidebar:"docs/chips/600X",previous:{title:"Display kscan",permalink:"/chips/600X/application/peripheral/samples/display_kscan"},next:{title:"\u65e5\u5fd7",permalink:"/chips/600X/application/modules/logger"}},s=[{value:"\u6982\u8ff0",id:"\u6982\u8ff0",children:[]},{value:"\u4fe1\u53f7\u91cf(Semaphores)",id:"\u4fe1\u53f7\u91cfsemaphores",children:[{value:"\u5e38\u7528API\u63a5\u53e3",id:"\u5e38\u7528api\u63a5\u53e3",children:[]},{value:"\u4fe1\u53f7\u91cf\u7684\u4f7f\u7528",id:"\u4fe1\u53f7\u91cf\u7684\u4f7f\u7528",children:[]}]},{value:"\u4e92\u65a5\u91cf(Mutex)",id:"\u4e92\u65a5\u91cfmutex",children:[{value:"\u6982\u8ff0",id:"\u6982\u8ff0-1",children:[]},{value:"\u5e38\u7528API\u63a5\u53e3",id:"\u5e38\u7528api\u63a5\u53e3-1",children:[]},{value:"\u4e92\u65a5\u91cf\u7684\u4f7f\u7528",id:"\u4e92\u65a5\u91cf\u7684\u4f7f\u7528",children:[]}]},{value:"\u8f6e\u8be2(poll)",id:"\u8f6e\u8be2poll",children:[{value:"\u6982\u8ff0",id:"\u6982\u8ff0-2",children:[]},{value:"\u5e38\u7528API\u63a5\u53e3",id:"\u5e38\u7528api\u63a5\u53e3-2",children:[]},{value:"Poll\u7684\u4f7f\u7528",id:"poll\u7684\u4f7f\u7528",children:[]}]}],_={toc:s};function c(e){var n=e.components,t=(0,a.Z)(e,i);return(0,l.kt)("wrapper",(0,r.Z)({},_,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"\u7ebf\u7a0b\u95f4\u540c\u6b65"},"\u7ebf\u7a0b\u95f4\u540c\u6b65"),(0,l.kt)("h2",{id:"\u6982\u8ff0"},"\u6982\u8ff0"),(0,l.kt)("p",null,"\u5728zephyr\u7cfb\u7edf\u4e2d\uff0c\u591a\u7ebf\u7a0b\u540c\u65f6\u8fd0\u884c\u65f6\u4f1a\u88ab\u8c03\u5ea6\u5668\u540c\u65f6\u8c03\u5ea6\uff0c\u4ece\u7cfb\u7edf\u5c42\u9762\u6765\u770b\u7ebf\u7a0b\u662f\u5e76\u884c\u8fd0\u884c\uff0c\u7cfb\u7edf\u5bf9\u5e76\u884c\u8fd0\u884c\u7684\u7ebf\u7a0b\u6709\u5148\u540e\u6267\u884c\u7684\u8981\u6c42\uff0c\u591a\u7ebf\u7a0b\u95f4\u9700\u8981\u8d44\u6e90\u5171\u4eab\u6216\u914d\u5408\u65f6\u5c31\u9700\u8981\u7ebf\u7a0b\u540c\u6b65\u529f\u80fd\u3002\u5d4c\u5165\u5f0f\u64cd\u4f5c\u7cfb\u7edf\u90fd\u4f1a\u63d0\u4f9b\u7ebf\u7a0b\u540c\u6b65\u624b\u6bb5\uff0cZephyr\u4e5f\u4e0d\u4f8b\u5916\uff0cZephyr\u63d0\u4f9b\u4e86\u4fe1\u53f7\u91cf\uff0c\u4e92\u65a5\u9501\uff0c\u8f6e\u8be2\u4e09\u79cd\u5185\u6838\u5bf9\u8c61\u4f5c\u4e3a\u591a\u7ebf\u7a0b\u540c\u6b65\u7684\u65b9\u5f0f\u3002"),(0,l.kt)("h2",{id:"\u4fe1\u53f7\u91cfsemaphores"},"\u4fe1\u53f7\u91cf(Semaphores)"),(0,l.kt)("p",null,"\u4fe1\u53f7\u91cf\u662f\u7528\u4e8e\u63a7\u5236\u591a\u4e2a\u7ebf\u7a0b\u5bf9\u4e00\u7ec4\u8d44\u6e90\u7684\u8bbf\u95ee\uff0c\u4f7f\u7528\u4fe1\u53f7\u91cf\u5728\u751f\u4ea7\u8005(ISR/Thread)\u548c\u6d88\u8d39\u8005(thread)\u4e4b\u95f4\u540c\u6b65\u3002\n\u4fe1\u53f7\u91cf\u6709\u4ee5\u4e0b\u7279\u6027\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Zephyr\u7684\u4fe1\u53f7\u91cf\u5728\u521d\u59cb\u5316\u65f6\u53ef\u4ee5\u6307\u5b9a\u521d\u59cb\u5316\u8ba1\u6570\u503c\u548c\u6700\u5927\u8ba1\u6570\u503c\uff0c\u751f\u4ea7\u8005give\u65f6\u8ba1\u6570\u503c+1\uff0c\u4f46\u4e0d\u4f1a\u8d85\u8fc7\u6700\u5927\u503c\uff0c\u6d88\u8d39\u8005take\u65f6\u8ba1\u6570\u503c-1\uff0c\u76f4\u5230\u4e3a0\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u6bcf\u6b21\u4fe1\u53f7\u91cfgive\u90fd\u4f1a\u5f15\u53d1\u8c03\u5ea6\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u5982\u679c\u591a\u4e2a\u7ebf\u7a0b\u90fd\u5728\u7b49\u5f85\u4fe1\u53f7\u91cf\uff0c\u65b0\u4ea7\u751f\u7684\u4fe1\u53f7\u91cf\u4f1a\u88ab\u7b49\u5f85\u65f6\u95f4\u6700\u957f\u7684\u6700\u9ad8\u4f18\u5148\u7ea7\u7ebf\u7a0b\u63a5\u6536\u3002")),(0,l.kt)("h3",{id:"\u5e38\u7528api\u63a5\u53e3"},"\u5e38\u7528API\u63a5\u53e3"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c"},"/*\u521d\u59cb\u5316\u4fe1\u53f7\u91cf*/\nK_SEM_DEFINE(name, initial_count, count_limit ) \n/*\u521d\u59cb\u5316\u4fe1\u53f7\u91cf*/\nint k_sem_init(struct k_sem * sem, unsigned int initial_count, unsigned int limit)\n/*\u7b49\u5f85\u4fe1\u53f7\u91cf*/\nint k_sem_take(struct k_sem * sem, k_timeout_t timeout) \n/*\u53d1\u9001\u4fe1\u53f7\u91cf*/\nvoid k_sem_give(struct k_sem * sem)\n")),(0,l.kt)("p",null,"\u66f4\u591a",(0,l.kt)("inlineCode",{parentName:"p"},"Semaphore API"),"\u63a5\u53e3 \u53ef\u4ee5\u5728zephyr\u5b98\u7f51",(0,l.kt)("a",{parentName:"p",href:"https://docs.zephyrproject.org/latest/doxygen/html/group__semaphore__apis.html"},"Semaphore APIS"),"\u4e2d\u627e\u5230\u3002"),(0,l.kt)("h3",{id:"\u4fe1\u53f7\u91cf\u7684\u4f7f\u7528"},"\u4fe1\u53f7\u91cf\u7684\u4f7f\u7528"),(0,l.kt)("p",null,"\u4ee5\u4e0b\u662f\u4e00\u4e2a\u4fe1\u53f7\u91cf\u4f7f\u7528\u4f8b\u7a0b\uff0c\u8be5\u793a\u4f8b\u521b\u5efa\u4e86\u4e00\u4e2a\u52a8\u6001\u4fe1\u53f7\u91cf\uff0c\u521d\u59cb\u5316\u4e24\u4e2a\u7ebf\u7a0b\uff0c\u5176\u4e2d\u4e00\u4e2a\u7ebf\u7a0b\u53d1\u9001\u4fe1\u53f7\u91cf\uff0c\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u63a5\u6536\u4fe1\u53f7\u91cf\u5e76\u6267\u884c\u76f8\u5e94\u7684\u64cd\u4f5c\u3002\u5b9e\u73b0\u4ee3\u7801\u5982\u4e0b\uff1a\n",(0,l.kt)("strong",{parentName:"p"},"\u4fe1\u53f7\u91cf\u521d\u59cb\u5316"),"\n\u4e00\u4e2a\u4fe1\u53f7\u91cf\u4f7f\u7528\u4e00\u4e2a\u7c7b\u578b\u4e3a k_sem \u7684\u53d8\u91cf\u5b9a\u4e49\uff0c\u6709\u4e24\u79cd\u65b9\u5f0f\u53ef\u4ee5\u5b8c\u6210\u4fe1\u53f7\u91cf\u7684\u521d\u59cb\u5316\uff1a     "),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u65b9\u6cd51\uff0c\u4f7f\u7528\u5b8f\uff1a")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c"},"K_SEM_DEFINE(my_sem, 0, 1);\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u65b9\u6cd52\uff0c\u4f7f\u7528\u51fd\u6570 ")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c"},"struct k_sem my_sem;\n\nk_sem_init(&my_sem, 0, 1);\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u53d1\u9001\u4fe1\u53f7\u91cf"),(0,l.kt)("br",{parentName:"p"}),"\n","\u5728thread\u6216\u8005ISR\u4e2d\u53d1\u9001\u4fe1\u53f7\u91cf\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c"},'void productor_thread(void *arg)\n{\n    ...\n    uint8_t count = 0;\n    while(1){\n        if(ciunt <= 100){\n            count++;     \n        }else{\n            return;\n        }\n        /* count \u6bcf\u8ba1\u6570 20 \u6b21\uff0c\u91ca\u653e\u4e00\u6b21\u4fe1\u53f7\u91cf */\n        if(0 == (count % 20)){\n            k_sem_give(&my_sem);\n            printk("productor thread give semaphore");\n        }\n    }\n}\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u63a5\u6536\u4fe1\u53f7\u91cf"),"\n\u4e00\u822c\u60c5\u51b5\u4e0b\u63a5\u6536\u4fe1\u53f7\u91cf\u7684thread\u662f\u6d88\u8d39\u8005\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c"},'void consumer_thread(void)\n{\n    ...\n    uint8_t number = 0;\n    while(1){\n        /* \u7b49\u5f85\u4fe1\u53f7\u91cf\uff0c\u83b7\u53d6\u5230\u4fe1\u53f7\u91cf\uff0c\u5219\u6267\u884c number \u81ea\u52a0\u7684\u64cd\u4f5c */\n        if (k_sem_take(&my_sem, K_MSEC(50)) != 0) {\n            printk("Input data not available!");\n        } else {\n            number++;\n            printk("consumer thread number %d ", number);\n        }\n    }\n}\n')),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u8fd0\u884c\u7ed3\u679c")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"*** Booting Zephyr OS build  ***\nproductor thread give semaphore  \nconsumer thread number 1 \nproductor thread give semaphore  \nconsumer thread number 2 \nproductor thread give semaphore  \nconsumer thread number 3  \nproductor thread give semaphore  \nconsumer thread number 4  \nproductor thread give semaphore  \nconsumer thread number 5 \n")),(0,l.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,l.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,l.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"\u4ee5\u4e0a\u662f\u4fe1\u53f7\u91cf\u7684\u57fa\u672c\u4f7f\u7528\u793a\u4f8b\uff0ccsk6 sdk\u4e2d\u4e5f\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4fe1\u53f7\u91cf\u7684\u4f7f\u7528sample\uff0c\u8def\u5f84",(0,l.kt)("inlineCode",{parentName:"p"},"samples--\x3esynchronization"),"\uff0c\u53ef\u4f7f\u7528",(0,l.kt)("inlineCode",{parentName:"p"},"lisa zep create"),"\u547d\u4ee4\u5b8c\u6210sample\u521b\u5efa\u3002"))),(0,l.kt)("h2",{id:"\u4e92\u65a5\u91cfmutex"},"\u4e92\u65a5\u91cf(Mutex)"),(0,l.kt)("h3",{id:"\u6982\u8ff0-1"},"\u6982\u8ff0"),(0,l.kt)("p",null,"\u4e92\u65a5\u91cf\u662f\u8868\u73b0\u4e92\u65a5\u73b0\u8c61\u7684\u6570\u636e\u7ed3\u6784\uff0c\u672c\u8d28\u4e0a\u662f\u4e00\u628a\u9501\uff0c\u63d0\u4f9b\u5bf9\u8d44\u6e90\u7684\u72ec\u5360\u8bbf\u95ee\uff0c\u901a\u5e38\u4f5c\u4e3a\u4fdd\u62a4\u591a\u7ebf\u7a0b\u7684\u4e34\u754c\u533a\uff0c\u5f53\u7ebf\u7a0b\u9700\u8981\u8bbf\u95ee\u4e34\u754c\u533a\u65f6\uff0c\u8c03\u7528",(0,l.kt)("inlineCode",{parentName:"p"},"k_mutex_lock"),"\uff0c\u5982\u679c\u5f53\u524d\u4e92\u65a5\u91cf\u662f\u89e3\u9501\u72b6\u6001\uff0c\u5219\u8c03\u7528\u6210\u529f\uff0c\u8c03\u7528\u7ebf\u7a0b\u53ef\u81ea\u7531\u8fdb\u5165\u4e34\u754c\u533a\uff0c\u5982\u679c\u4e92\u65a5\u91cf\u5df2\u7ecf\u67b7\u9501\uff0c\u8c03\u7528\u7ebf\u7a0b\u4f1a\u88ab\u963b\u585e\uff0c\u77e5\u9053\u4e34\u754c\u533a\u4e2d\u6240\u6709\u7684\u7ebf\u7a0b\u5b8c\u6210\u5e76\u8c03\u7528",(0,l.kt)("inlineCode",{parentName:"p"},"k_mutex_unlock"),"\u3002"),(0,l.kt)("p",null,"\u4e92\u65a5\u91cf\u6709\u4ee5\u4e0b\u7279\u6027\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Mutex\u53ea\u80fd\u7528\u4e8e\u7ebf\u7a0b\u4e4b\u95f4\uff0c\u4e0d\u80fd\u7528\u4e8eISR\u4e2d\u3002"),(0,l.kt)("li",{parentName:"ul"},"Mutex unlock\u65f6\u4f1a\u5f15\u53d1\u8c03\u5ea6\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u4f4e\u4f18\u5148\u7ea7\u7ebf\u7a0b\u83b7\u53d6\u9501\u540e\u6709\u9ad8\u4f18\u5148\u7ea7\u7ebf\u7a0b\u7b49\u9501\u65f6\u4f1a\u5f15\u8d77\u4f18\u5148\u7ea7\u5012\u7f6e\u3002")),(0,l.kt)("h3",{id:"\u5e38\u7528api\u63a5\u53e3-1"},"\u5e38\u7528API\u63a5\u53e3"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c"},"/*\u521d\u59cb\u5316\u4e92\u65a5\u91cf*/\n#define K_MUTEX_DEFINE(name)    \n\n/*\u521d\u59cb\u5316\u4e92\u65a5\u91cf*/\nint k_mutex_init(struct k_mutex * mutex)    \n\n/*\u52a0\u9501\u4e92\u65a5\u91cf*/\nint k_mutex_lock(struct k_mutex * mutex, k_timeout_t timeout)\n\n/*\u89e3\u9501\u4e92\u65a5\u91cf*/\nvoid k_mutex_unlock(struct k_mutex * mutex)\n")),(0,l.kt)("p",null,"\u66f4\u591a",(0,l.kt)("inlineCode",{parentName:"p"},"Mutex API"),"\u63a5\u53e3 \u53ef\u4ee5\u5728zephyr\u5b98\u7f51",(0,l.kt)("a",{parentName:"p",href:"https://docs.zephyrproject.org/latest/doxygen/html/group__mutex__apis.html"},"Mutex APIs"),"\u4e2d\u627e\u5230\u3002"),(0,l.kt)("h3",{id:"\u4e92\u65a5\u91cf\u7684\u4f7f\u7528"},"\u4e92\u65a5\u91cf\u7684\u4f7f\u7528"),(0,l.kt)("p",null,"\u4ee5\u4e0b\u662f\u4e92\u65a5\u91cf\u4f7f\u7528\u4f8b\u7a0b\uff0c\u4e24\u4e2a\u7ebf\u7a0b\u90fd\u8981\u8bbf\u95ee\u540c\u4e00\u4e2aIO\u8d44\u6e90\uff0c\u4f46IO\u540c\u65f6\u53ea\u80fd\u88ab\u72ec\u5360\u8bbf\u95ee\uff0c\u56e0\u6b64\u9700\u8981\u4f7f\u7528\u4e92\u65a5\u91cf\u6765\u5b9e\u73b0\uff0c\u5b9e\u73b0\u4ee3\u7801\u5982\u4e0b\uff1a\n",(0,l.kt)("strong",{parentName:"p"},"\u4e92\u65a5\u91cf\u521d\u59cb\u5316"),"\n\u4e00\u4e2a\u4e92\u65a5\u91cf\u4f7f\u7528\u4e00\u4e2a\u7c7b\u578b\u4e3a k_mutex \u7684\u53d8\u91cf\u5b9a\u4e49\uff0c\u6709\u4e24\u79cd\u65b9\u5f0f\u53ef\u4ee5\u5b8c\u6210\u4fe1\u53f7\u91cf\u7684\u521d\u59cb\u5316\uff1a     "),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u65b9\u6cd51\uff0c\u4f7f\u7528\u5b8f\uff1a")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c"},"K_MUTEX_DEFINE(my_mutex);\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u65b9\u6cd52\uff0c\u4f7f\u7528\u51fd\u6570 ")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c"},"struct k_mutex my_mutex;\nk_mutex_init(&my_mutex);\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"\u52a0\u9501\u548c\u89e3\u9501\u4fe1\u53f7\u91cf"),"       "),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c"},"#define LED0_NODE_ID DT_NODELABEL(gpioa)\n#define PIN 5\n#define FLAGS 0\n\n#define A_STACK_SIZE 4096\n#define B_STACK_SIZE 4096\n\nK_THREAD_STACK_DEFINE(thread_a_area, A_STACK_SIZE);\nK_THREAD_STACK_DEFINE(thread_b_area, B_STACK_SIZE);\n\nstruct k_thread thread_a_data;\nstruct k_thread thread_b_data;\n\nvoid main(void)\n{\n    ...\n    dev = DEVICE_DT_GET(LED0_NODE_ID);\n    ret = gpio_pin_configure(dev, PIN, GPIO_OUTPUT_ACTIVE | FLAGS);\n    ...\n\n    struct k_mutex my_mutex;\n    k_mutex_init(&my_mutex);\n    ...\n\n    /* create thread_a and thread_b */\n    int pri = k_thread_priority_get(k_current_get());\n    k_thread_create(&thread_a_data, thread_a_area,\n                    K_THREAD_STACK_SIZEOF(thread_a_area),\n                    thread_a, NULL, NULL, NULL, pri, 0, K_NO_WAIT);\n\n    k_thread_create(&thread_b_data, thread_b_area,\n                    K_THREAD_STACK_SIZEOF(thread_b_area), \n                    thread_b, NULL,NULL, NULL, pri, 0, K_NO_WAIT);\n}\n\n/*\u7ebf\u7a0bA\u64cd\u4f5cIO\u65f6\u5bf9\u4e92\u65a5\u91cf\u7684\u64cd\u4f5c*/\nthread_a()\n{\n    k_mutex_lock(&my_mutex, K_FOREVER);\n\n    /*\u64cd\u4f5cGPIO*/\n    gpio_pin_set(dev, PIN, 1);\n\n    k_mutex_unlock(&my_mutex);\n}\n\n/*\u7ebf\u7a0bB\u64cd\u4f5cIO\u65f6\u5bf9\u4e92\u65a5\u91cf\u7684\u64cd\u4f5c*/\nthread_b()\n{\n    k_mutex_lock(&my_mutex, K_FOREVER);\n\n    /*\u64cd\u4f5cGPIO*/\n    gpio_pin_set(dev, PIN, 0);\n\n    k_mutex_unlock(&my_mutex);\n}\n")),(0,l.kt)("h2",{id:"\u8f6e\u8be2poll"},"\u8f6e\u8be2(poll)"),(0,l.kt)("h3",{id:"\u6982\u8ff0-2"},"\u6982\u8ff0"),(0,l.kt)("p",null,"Async poll\u662f\u4e00\u4e2a\u6bd4\u8f83\u7279\u6b8a\u7684\u5185\u6838\u5bf9\u8c61\uff0cpolling API\u5141\u8bb8\u4e00\u4e2a\u7ebf\u7a0b\u7b49\u5f85\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u6761\u4ef6\u6ee1\u8db3\u3002\u652f\u6301\u7684\u6761\u4ef6\u7c7b\u578b\u53ea\u80fd\u662f\u5185\u6838\u5bf9\u8c61\uff0c\u53ef\u4ee5\u662fSemaphore, FIFO, poll signal\u4e09\u79cd\u3002\n\u4f8b\u5982\u4e00\u4e2a\u7ebf\u7a0b\u4f7f\u7528polling API\u540c\u65f6\u7b49\u5f85\u591a\u4e2asemaphore\uff0c\u53ea\u8981\u5176\u4e2d\u4e00\u4e2asemaphore\u89e6\u53d1\u65f6polling API\u5c31\u4f1a\u5f97\u5230\u901a\u77e5\u3002\npoll\u5177\u6709\u4ee5\u4e0b\u7279\u6027\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u5f53\u4e00\u4e2a\u7ebf\u7a0b\u7b49\u5f85\u591a\u4e2a\u89e6\u53d1\u6761\u4ef6\u65f6\uff0c\u53ea\u8981\u6709\u4e00\u4e2a\u6761\u4ef6\u6ee1\u8db3k_poll\u5c31\u4f1a\u8fd4\u56de\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u5f53semaphore\u6216FIFO\u6ee1\u8db3\u6761\u4ef6\u540e, k_poll\u53ea\u662f\u63a5\u5230\u901a\u77e5\u8fd4\u56de\uff0c\u7ebf\u7a0b\u5e76\u672a\u83b7\u53d6\u5230semaphore\u6216FIFO, \u8fd8\u9700\u8981\u4f7f\u7528\u4ee3\u7801\u4e3b\u52a8\u83b7\u53d6\u3002")),(0,l.kt)("h3",{id:"\u5e38\u7528api\u63a5\u53e3-2"},"\u5e38\u7528API\u63a5\u53e3"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c"},"/*\u521d\u59cb\u5316\u4e00\u4e2ak_poll_event\u5b9e\u4f8b*/\nvoid k_poll_event_init(struct k_poll_event * event,\nuint32_t type, int mode, void * obj )   \n/*\u8f6e\u8be2k_poll_event\u5b9e\u4f8b,\u7b49\u5f85\u89e6\u53d1\u6761\u4ef6*/\nint k_poll(struct k_poll_event * events, int num_events, k_timeout_t timeout)   \n/*\u521d\u59cb\u5316poll signal\u4fe1\u53f7\uff0c\u4f5c\u4e3apoll event\u7684\u89e6\u53d1*/\nvoid k_poll_signal_init(struct k_poll_signal * sig) \n/*\u53d1\u9001poll signal\u4fe1\u53f7*/\nint k_poll_signal_raise(struct k_poll_signal * sig,\nint result) \n/*\u6e05\u9664signal\u4fe1\u53f7\uff0c\u5982\u679csignal\u88ab\u53d1\u9001\uff0c\u4f46\u8fd8\u672a\u88abpoll\u524d\uff0c\u90fd\u53ef\u4ee5\u4f7f\u7528\u8be5API reset\u6e05\u9664*/\nvoid k_poll_signal_reset(struct k_poll_signal * sig)\n\n/*\u83b7\u53d6signal\u4fe1\u53f7\u7684\u72b6\u6001\u548c\u503c*/\nvoid k_poll_signal_check(struct k_poll_signal * sig, unsigned int * signaled, int * result) \n\n")),(0,l.kt)("p",null,"\u66f4\u591a",(0,l.kt)("inlineCode",{parentName:"p"},"Poll API"),"\u63a5\u53e3 \u53ef\u4ee5\u5728zephyr\u5b98\u7f51",(0,l.kt)("a",{parentName:"p",href:"https://docs.zephyrproject.org/latest/doxygen/html/group__poll__apis.html"},"Async polling APIs"),"\u4e2d\u627e\u5230\u3002"),(0,l.kt)("h3",{id:"poll\u7684\u4f7f\u7528"},"Poll\u7684\u4f7f\u7528"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'**\u7ebf\u7a0bA poll\u4fe1\u53f7\u662f\u5426\u53d1\u9001**    \n```c\n/*\u5b9a\u4e49\u4e00\u4e2apoll signal\u4fe1\u53f7*/\nstruct k_poll_signal signal;\n\nvoid thread_A(void){\n    /*\u521d\u59cb\u5316\u4fe1\u53f7\uff0c\u5e76\u5c06\u5176\u4f5c\u4e3apoll\u6761\u4ef6*/\n    k_poll_signal_init(&signal);\n    \n    /*\u521d\u59cb\u5316poll event\u6761\u4ef6*/\n    struct k_poll_event events[1] = {\n        K_POLL_EVENT_INITIALIZER(K_POLL_TYPE_SIGNAL,\n                                 K_POLL_MODE_NOTIFY_ONLY,\n                                 &signal),\n    };\n\n    while(1){\n            k_poll(events, 1, K_FOREVER);\n\n            if (events[0].signal->result == 0x1337) {\n                printk("get signal");\n            } else {\n                 printk("weird error");\n            }\n\n            /*\u5728\u5faa\u73af\u4e2d\u8c03\u7528 k_poll() \u65f6\uff0c\u7528\u6237\u5fc5\u987b\u5c06event\u7684state\u6001\u91cd\u7f6e\u4e3aK_POLL_STATE_NOT_READY*/\n            events[0].signal->signaled = 0;\n            events[0].state = K_POLL_STATE_NOT_READY;\n    }\n}\n')),(0,l.kt)("p",null,"// \u7ebf\u7a0b B \u53d1\u9001signal\u4fe1\u53f7\u89e6\u53d1event"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c"},"void thread_B(void)\n{\n    k_poll_signal_raise(&signal, 0x1337);\n}\n")))}c.isMDXComponent=!0}}]);